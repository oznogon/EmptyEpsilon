From 214d8efeb93d790191b00052c210069927114177 Mon Sep 17 00:00:00 2001
From: Garrett Guillotte <garrett+ozgh@oznogon.com>
Date: Fri, 27 Mar 2020 13:17:14 -0700
Subject: [PATCH] hacky helms transparency POC

- add viewport3d
- remove background gradient
- reduce alpha on radarView background draw
- copy camera code from single-pilot
---
 src/screenComponents/radarView.cpp |  2 +-
 src/screens/crew6/helmsScreen.cpp  | 43 ++++++++++++++++++++++++++++++
 src/screens/crew6/helmsScreen.h    |  3 +++
 3 files changed, 47 insertions(+), 1 deletion(-)

diff --git a/src/screenComponents/radarView.cpp b/src/screenComponents/radarView.cpp
index 75c3fbc6..5d2b71a8 100644
--- a/src/screenComponents/radarView.cpp
+++ b/src/screenComponents/radarView.cpp
@@ -182,7 +182,7 @@ void GuiRadarView::updateGhostDots()
 
 void GuiRadarView::drawBackground(sf::RenderTarget& window)
 {
-    window.clear(sf::Color(20, 20, 20, 255));
+    window.clear(sf::Color(20, 20, 20, 128));
 }
 
 void GuiRadarView::drawNoneFriendlyBlockedAreas(sf::RenderTarget& window)
diff --git a/src/screens/crew6/helmsScreen.cpp b/src/screens/crew6/helmsScreen.cpp
index 607dcef7..2960eb18 100644
--- a/src/screens/crew6/helmsScreen.cpp
+++ b/src/screens/crew6/helmsScreen.cpp
@@ -10,6 +10,7 @@
 #include "screenComponents/dockingButton.h"
 #include "screenComponents/alertOverlay.h"
 #include "screenComponents/customShipFunctions.h"
+#include "screenComponents/viewport3d.h"
 
 #include "gui/gui2_label.h"
 #include "gui/gui2_togglebutton.h"
@@ -19,12 +20,19 @@
 HelmsScreen::HelmsScreen(GuiContainer* owner)
 : GuiOverlay(owner, "HELMS_SCREEN", colorConfig.background)
 {
+/*
     // Render the radar shadow and background decorations.
     background_gradient = new GuiOverlay(this, "BACKGROUND_GRADIENT", sf::Color::White);
     background_gradient->setTextureCenter("gui/BackgroundGradient");
 
     background_crosses = new GuiOverlay(this, "BACKGROUND_CROSSES", sf::Color::White);
     background_crosses->setTextureTiled("gui/BackgroundCrosses");
+*/
+
+    viewport = new GuiViewport3D(this, "3D_VIEW");
+    viewport->setPosition(0, 0, ACenter)->setSize(GuiElement::GuiSizeMax, GuiElement::GuiSizeMax);
+    viewport->show();
+    first_person = false;
 
     // Render the alert level color overlay.
     (new AlertLevelOverlay(this));
@@ -94,6 +102,41 @@ void HelmsScreen::onDraw(sf::RenderTarget& window)
         warp_controls->setVisible(my_spaceship->has_warp_drive);
         jump_controls->setVisible(my_spaceship->has_jump_drive);
     }
+    if (my_spaceship)
+    {
+        float target_camera_yaw = my_spaceship->getRotation();
+        camera_pitch = 30.0f;
+
+        float camera_ship_distance = 420.0f;
+        float camera_ship_height = 420.0f;
+
+        if (first_person)
+        {
+            camera_ship_distance = -(my_spaceship->getRadius() * 1.5);
+            camera_ship_height = my_spaceship->getRadius() / 10.f;
+            camera_pitch = 0;
+        }
+
+        sf::Vector2f cameraPosition2D = my_spaceship->getPosition() + sf::vector2FromAngle(target_camera_yaw) * -camera_ship_distance;
+        sf::Vector3f targetCameraPosition(cameraPosition2D.x, cameraPosition2D.y, camera_ship_height);
+#ifdef DEBUG
+        if (sf::Keyboard::isKeyPressed(sf::Keyboard::Z))
+        {
+            targetCameraPosition.x = my_spaceship->getPosition().x;
+            targetCameraPosition.y = my_spaceship->getPosition().y;
+            targetCameraPosition.z = 3000.0;
+            camera_pitch = 90.0f;
+        }
+#endif
+        if (first_person)
+        {
+            camera_position = targetCameraPosition;
+            camera_yaw = target_camera_yaw;
+        } else {
+            camera_position = camera_position * 0.9f + targetCameraPosition * 0.1f;
+            camera_yaw += sf::angleDifference(camera_yaw, target_camera_yaw) * 0.1f;
+        }
+    }
     GuiOverlay::onDraw(window);
 }
 
diff --git a/src/screens/crew6/helmsScreen.h b/src/screens/crew6/helmsScreen.h
index 3cb4e7f2..63e8e4fe 100644
--- a/src/screens/crew6/helmsScreen.h
+++ b/src/screens/crew6/helmsScreen.h
@@ -7,12 +7,15 @@
 
 class GuiKeyValueDisplay;
 class GuiLabel;
+class GuiViewport3D;
 
 class HelmsScreen : public GuiOverlay
 {
 private:
+    bool first_person;
     GuiOverlay* background_gradient;
     GuiOverlay* background_crosses;
+    GuiViewport3D* viewport;
 
     GuiKeyValueDisplay* energy_display;
     GuiKeyValueDisplay* heading_display;
-- 
2.25.1

